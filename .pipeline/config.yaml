pipelines:
  wmf-publish:
    stages:
      - name: wikiversions
        build: list-wikiversions
        run:
          tail: 10
        blubberfile: &blubberfile
          version: v4
          apt:
            proxies: ['${setup.httpProxy}']
          variants:
            list-wikiversions:
              base: docker-registry.wikimedia.org/php7.2-cli
              builder:
                requirements: [wikiversions.json, multiversion/]
                command: [bash, -c, 'multiversion/bin/list-versions.php | cut -f 2 > versions']
              entrypoint: [cat, versions]
            rsync:
              base: docker-registry.wikimedia.org/wikimedia-buster
              apt:
                packages: [rsync]
              entrypoint: [rsync]
      - name: fetch-private
        build: rsync
        run:
          arguments: [-a, 'deployment.eqiad.wmnet::srv-mediawiki-private-primary/', /tmp/private/]
        copy:
          - source: /tmp/private/
            destination: private
        blubberfile: *blubberfile
      - name: fetch-patches
        build: rsync
        run:
          arguments: [-a, 'deployment.eqiad.wmnet::srv-patches-releases-primary/', /tmp/patches/]
        copy:
          - source: /tmp/patches
            destination: patches
        blubberfile: *blubberfile

      - name: prepare-mw-versions
        build:
          variant: multiversion
          excludes:
            - .git
        blubberfile: 
          version: v4
          variants:
            multiversion:
              base: docker-registry.wikimedia.org/php7.2-fpm
              lives:
                in: /srv/mediawiki
              runs:
                # match base image www-data uid/gid
                uid: 33
                gid: 33
              builder:
                requirements:
                  $merge:
                    $each: version
                    $in: "${wikiversions.output}"
                    $yield:
                      from: "docker-registry.wikimedia.org/wikimedia/mediawiki:wmf-${.version}"
                      source: /srv/mediawiki
                      destination: "/srv/mediawiki/php-${.version}"
                  $with:
                    - .
                command: [.pipeline/wmf-publish/build, prepare-mw-versions]

      - name: apply-security-patches
        notify:
          email:
            to:
              - security-team@wikimedia.org
              - releng@wikimedia.org
            subject: Security patch application failed
        build:
          variant: patched
          excludes:
            - .git
          imagePullPolicy: never
        blubberfile:
          version: v4
          apt:
            proxies: ['${setup.httpProxy}']
          variants:
            patched:
              base: '${prepare-mw-versions.imageLocalName}'
              apt:
                packages:
                  - patch
              lives:
                in: /srv/mediawiki
              runs:
                # match base image www-data uid/gid
                uid: 33
                gid: 33
              builder:
                command: [.pipeline/wmf-publish/build, apply-security-patches]

      - name: setup-l10n
        build:
          variant: l10n
          excludes:
            - .git
          imagePullPolicy: never
        blubberfile:
          version: v4
          variants:
            l10n:
              base: '${apply-security-patches.imageLocalName}'
              lives:
                in: /srv/mediawiki
              runs:
                # match base image www-data uid/gid
                uid: 33
                gid: 33
              builder:
                command: [.pipeline/wmf-publish/build, setup-l10n]

      - name: publish
        build:
          variant: prod
          excludes:
            - .git
          imagePullPolicy: never
        publish:
          image:
            name: mediawiki-multiversion
            tags: [production]
        blubberfile:
          version: v4
          variants:
            # Using 'prod' instead of 'production' to get around the policy rules that are
            # applied when the variant==production.  Specifically the
            # one that constrains the base image to starts with "docker-registry.wikimedia.org"
            prod:
              base: '${setup-l10n.imageLocalName}'
              lives:
                in: /srv/mediawiki
              runs:
                # match base image www-data uid/gid
                uid: 33
                gid: 33

      # I don't know what the story is on this one so leaving it commented
      # out for now. --dancy
      # - name: webserver
      #   build:
      #     variant: production
      #     excludes:
      #       - .git
      #       - wmf-config
      #       - tests
      #       - php
      #       - src
      #       - multiversion
      #   publish:
      #     image:
      #       name: mediawiki-webserver
      #       tags: ["production"]
      #   blubberfile:
      #     version: v4
      #     runs:
      #       uid: 33
      #       gid: 33
      #     variants:
      #       production:
      #         base: docker-registry.wikimedia.org/mediawiki-httpd
      #         copies: [local]
      #         lives:
      #           in: /srv/mediawiki
